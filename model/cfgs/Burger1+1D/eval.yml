---
.colors: &colors
  yellow:         &yellow           '#F5DDA9'
  darkblue:       &darkblue         '#2F7194'
  red:            &red              '#ec7070'
  skyblue:        &skyblue          '#97c3d0'
  darkgreen:      &darkgreen        '#48675A'
  lightbrown:     &lightbrown       '#C6BFA2'
  orange:         &orange           '#EC9F7E'
  lightgreen:     &lightgreen       '#AFD8BC'
  grey:           &grey             '#3D4244'

# Plot the prediction
predictions:
  based_on: predictions_2D

# Plot snapshots of the prediction
frames:
  based_on:
    - .creator.universe
    - .plot.facet_grid.line
    - .plot.facet_grid.with_auto_encoding
  select:
    data:
      path: VPINN/prediction_final
      transform:
        - .isel: [!dag_prev , {y: !slice [~, ~, 33]}]
  col: y

# Plot an animation of the solution
animation:
  based_on:
    - .creator.universe
    - .plot.facet_grid.line
    - .animation.ffmpeg
  select:
    data:
      path: VPINN/prediction_final
  x: x
  frames: y
  helpers:
    set_title:
      title: ' '

# Plot the training loss
loss:
  based_on: loss
  helpers:
    set_scales:
      y: log

# Plot the boundary conditions
boundary_conditions:
  based_on:
    - .creator.universe
    - .plot.facet_grid.scatter
  select:
    vals: VPINN/training_data
  transform:
    - .sel: [!dag_tag vals , {'variable': 'x'}]
      kwargs:
        drop: True
      tag: x
    - .sel: [!dag_tag vals , {'variable': 'u'}]
      kwargs:
        drop: True
      tag: u
    - xr.Dataset:
      - x: !dag_tag x
        u: !dag_tag u
      tag: data
  x: x
  y: u
  hue: u
  cmap:
    continuous: true
    from_values:
      0: *darkblue
      0.5: *yellow
      1: *red
