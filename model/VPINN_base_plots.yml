---
.variables:
  base_path:        &base_path    data

  colors: &colors
    yellow:         &yellow           '#F5DDA9'
    darkblue:       &darkblue         '#2F7194'
    red:            &red              '#ec7070'
    skyblue:        &skyblue          '#97c3d0'
    darkgreen:      &darkgreen        '#48675A'
    lightbrown:     &lightbrown       '#C6BFA2'
    orange:         &orange           '#EC9F7E'
    lightgreen:     &lightgreen       '#AFD8BC'
    grey:           &grey             '#3D4244'

.default_style:
  style:
    text.usetex:        True
    mathtext.fontset:   cm
    font.family:        serif
    font.size:          &fontsize 9
    axes.titlesize:     *fontsize
    axes.labelsize:     *fontsize
    xtick.labelsize:    *fontsize
    ytick.labelsize:    *fontsize
    grid.linewidth:     0.5
    savefig.bbox:       tight
    axes.prop_cycle: !format
      fstr: "cycler('color', ['{colors[yellow]:}',
                              '{colors[darkblue]:}',
                              '{colors[red]:}',
                              '{colors[skyblue]:}',
                              '{colors[darkgreen]:}',
                              '{colors[lightbrown]:}',
                              '{colors[orange]:}',
                              '{colors[lightgreen]:}',
                              '{colors[grey]:}'])"
      colors: *colors
    axes.grid:          True
    axes.spines.top:    False
    axes.spines.right:  False
    legend.fontsize: 9
  helpers:
    save_figure:
      dpi: 900
  file_ext: png


# ======================================================================================================================
#  ╔╦╗╔═╗╔╦╗╔═╗╦  ╔═╗╔╦╗╔═╗╔═╗
#   ║ ║╣ ║║║╠═╝║  ╠═╣ ║ ║╣ ╚═╗
#   ╩ ╚═╝╩ ╩╩  ╩═╝╩ ╩ ╩ ╚═╝╚═╝
# ======================================================================================================================
# -- Overloads ---------------------------------------------------------------------------------------------------------
# Overload some configs to insert model-specific settings
.creator.universe:
  based_on:
    - .creator.universe
    - .default_style

  dag_options:
    select_path_prefix: *base_path

.creator.multiverse:
  based_on:
    - .creator.multiverse
    - .default_style

  select_and_combine:
    base_path: *base_path

# ======================================================================================================================
#  ╔═╗╦  ╔═╗╔╦╗╔═╗
#  ╠═╝║  ║ ║ ║ ╚═╗
#  ╩  ╩═╝╚═╝ ╩ ╚═╝
# ======================================================================================================================

# -- Plot of the training loss -----------------------------------------------------------------------------------------
loss:
  based_on:
    - .creator.universe
    - .plot.facet_grid.line
  select:
    data: VPINN/loss
  x: time
  hue: loss type
  helpers:
    set_labels:
      x: iteration
      y: Training loss
    set_scales:
      y: log

# ======================================================================================================================
#  ╔═╗╦═╗╦╔╦╗  ╔═╗╦  ╔═╗╔╦╗╔═╗
#  ║ ╦╠╦╝║ ║║  ╠═╝║  ║ ║ ║ ╚═╗
#  ╚═╝╩╚═╩═╩╝  ╩  ╩═╝╚═╝ ╩ ╚═╝
# ======================================================================================================================

# 1-dimensional grid
grid1d:
  based_on:
    - .creator.universe
    - .plot.facet_grid.scatter
  select:
    grid: data/grid
  transform:
    - .isel: [!dag_tag grid, {idx: 0} ]
      kwargs:
        drop: true
      tag: dim1
    - len: [!dag_prev ]
    - np.zeros: [!dag_prev ]
    - xr.Dataset:
      - dim1: !dag_tag dim1
        dim2: !dag_prev
      tag: data
  x: dim1
  y: dim2

grid_boundary1d:
  based_on:
    - .creator.universe
    - .plot.facet_grid.scatter
  select:
    vals: data/grid_boundary
  transform:
    - .isel: [ !dag_prev , { variable: 0 } ]
      kwargs:
        drop: true
      tag: dim1
    - len: [!dag_prev ]
    - np.zeros: [!dag_prev ]
      tag: dim2
    - .isel: [ !dag_tag vals, { variable: -1 } ]
      kwargs:
        drop: true
      tag: n
    - xr.Dataset:
        - dim1: !dag_tag dim1
          dim2: !dag_tag dim2
          n: !dag_tag n
      tag: data
  x: dim1
  y: dim2
  hue: n
  cmap: &normals_cmap
    from_values:
      -1: *darkblue
      1: *red

# 2-dimensional grid
grid2d:
  based_on:
    - .creator.universe
    - .plot.facet_grid.scatter
  select:
    grid: data/grid
  transform:
    - .isel: [!dag_tag grid , {idx: 0}]
      kwargs:
        drop: true
      tag: dim1
    - .isel: [!dag_tag grid, {idx: 1}]
      kwargs:
        drop: true
      tag: dim2
    - xr.Dataset:
      - dim1: !dag_tag dim1
        dim2: !dag_tag dim2
      tag: data
  x: dim1
  y: dim2

# 2d grid boundary
grid_boundary2d:
  based_on:
    - .creator.universe
    - .plot.facet_grid.scatter
  select:
    vals: data/grid_boundary
  transform:
    - .isel: [ !dag_prev , { variable: 0 } ]
      kwargs:
        drop: true
      tag: dim1
    - .isel: [ !dag_tag vals, { variable: 1 } ]
      kwargs:
        drop: true
      tag: dim2
    - .sel: [ !dag_tag vals, { variable: 'n' } ]
      kwargs:
        drop: true
      tag: n
    - xr.Dataset:
        - dim1: !dag_tag dim1
          dim2: !dag_tag dim2
          n: !dag_tag n
      tag: data
  x: dim1
  y: dim2
  hue: n

# 3-dimensional grid
grid3d:
  based_on:
    - .creator.universe
    - .plot.facet_grid.scatter3d
  select:
    grid: data/grid
  transform:
    - .isel: [!dag_prev , {idx: 0}]
      kwargs:
        drop: true
    - .data: [!dag_prev ]
    - .flatten: [!dag_prev ]
      tag: x
    - .isel: [!dag_tag grid, {idx: 1}]
      kwargs:
        drop: true
    - .data: [!dag_prev ]
    - .flatten: [!dag_prev ]
      tag: y
    - .isel: [ !dag_tag grid, { idx: 2 } ]
      kwargs:
        drop: true
    - .data: [ !dag_prev ]
    - .flatten: [ !dag_prev ]
      tag: z
    - xr.Dataset:
      - dim1: !dag_tag x
        dim2: !dag_tag y
        dim3: !dag_tag z
      tag: data
  x: dim1
  y: dim2
  z: dim3

# 3-dimensional grid boundary
grid_boundary3d:
  based_on:
    - .creator.universe
    - .plot.facet_grid.scatter3d
  select:
    vals: data/grid_boundary
  transform:
    - .isel: [ !dag_prev , { variable: 0 } ]
      kwargs:
        drop: true
      tag: dim1
    - .isel: [ !dag_tag vals, { variable: 1 } ]
      kwargs:
        drop: true
      tag: dim2
    - .isel: [ !dag_tag vals, { variable: 2 } ]
      kwargs:
        drop: true
      tag: dim3
    - .isel: [ !dag_tag vals, { variable: -1 } ]
      kwargs:
        drop: true
      tag: n
    - xr.Dataset:
        - x: !dag_tag dim1
          y: !dag_tag dim2
          z: !dag_tag dim3
          n: !dag_tag n
      tag: data
  x: dim1
  y: dim2
  z: dim3
  hue: n
#  cmap:
#    <<: *normals_cmap

# ======================================================================================================================
#  ╔═╗╦═╗╔═╗╔╦╗╦╔═╗╔╦╗╦╔═╗╔╗╔╔═╗
#  ╠═╝╠╦╝║╣  ║║║║   ║ ║║ ║║║║╚═╗
#  ╩  ╩╚═╚═╝═╩╝╩╚═╝ ╩ ╩╚═╝╝╚╝╚═╝
# ======================================================================================================================
line:
  based_on:
    - .creator.universe
    - .plot.facet_grid.line

# Plot a function on a two-dimensional domain
heatmap:
  based_on:
    - .creator.universe
    - .plot.facet_grid.pcolormesh
  cmap: &cmap
    continuous: true
    from_values:
      0: *darkblue
      0.5: *red
      1: *yellow

u_boundary:
  based_on:
    - .creator.universe
    - .plot.facet_grid.scatter
  select:
    vals: data/u_exact_boundary
  transform:
    - .isel: [ !dag_prev , {variable: 0}]
      kwargs:
        drop: true
      tag: x
    - .isel: [ !dag_tag vals, {variable: 1}]
      kwargs:
        drop: true
      tag: y
    - .isel: [ !dag_tag vals, {variable: 2}]
      kwargs:
        drop: true
      tag: u
    - xr.Dataset:
        - x: !dag_tag x
          y: !dag_tag y
          u: !dag_tag u
      tag: data
  x: x
  y: y
  hue: u
  cmap:
    <<: *cmap
